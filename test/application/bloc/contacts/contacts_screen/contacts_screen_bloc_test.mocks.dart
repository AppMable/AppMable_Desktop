// Mocks generated by Mockito 5.3.2 from annotations
// in appmable_desktop/test/application/bloc/contacts/contacts_screen/contacts_screen_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:appmable_desktop/domain/model/objects/contact.dart' as _i4;
import 'package:appmable_desktop/domain/services/contact_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ContactService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactService extends _i1.Mock implements _i2.ContactService {
  MockContactService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Contact>> getContacts({
    required int? userId,
    required String? userToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
          {
            #userId: userId,
            #userToken: userToken,
          },
        ),
        returnValue: _i3.Future<List<_i4.Contact>>.value(<_i4.Contact>[]),
      ) as _i3.Future<List<_i4.Contact>>);
  @override
  _i3.Future<_i4.Contact?> getContact({
    required int? contactId,
    required dynamic userToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContact,
          [],
          {
            #contactId: contactId,
            #userToken: userToken,
          },
        ),
        returnValue: _i3.Future<_i4.Contact?>.value(),
      ) as _i3.Future<_i4.Contact?>);
  @override
  _i3.Future<bool> deleteContact({
    required int? contactId,
    required dynamic userToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContact,
          [],
          {
            #contactId: contactId,
            #userToken: userToken,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> createContact({
    required Map<String, dynamic>? contact,
    required dynamic userToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createContact,
          [],
          {
            #contact: contact,
            #userToken: userToken,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> updateContact({
    required Map<String, dynamic>? contact,
    required dynamic userToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContact,
          [],
          {
            #contact: contact,
            #userToken: userToken,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
